"use client"

import { useState, useEffect } from "react"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Badge } from "@/components/ui/badge"
import type { Mascota } from "@/lib/db"
import { Card, CardContent } from "@/components/ui/card"
import { Alert, AlertDescription } from "@/components/ui/alert"

export function MascotasTable() {
  const [mascotas, setMascotas] = useState<Mascota[]>([])
  const [isLoading, setIsLoading] = useState(true)
  const [successMessage, setSuccessMessage] = useState("")

  useEffect(() => {
    fetchMascotas()
  }, [])

  const fetchMascotas = async () => {
    try {
      const response = await fetch("/api/admin/mascotas")
      const data = await response.json()
      setMascotas(data.mascotas || [])
    } catch (error) {
      console.error("[v0] Error fetching mascotas:", error)
    } finally {
      setIsLoading(false)
    }
  }

  const getEstadoBadge = (estado: string) => {
    switch (estado) {
      case "disponible":
        return <Badge variant="default">Disponible</Badge>
      case "no_disponible":
        return <Badge variant="secondary">No Disponible</Badge>
      default:
        return <Badge variant="outline">{estado}</Badge>
    }
  }

  if (isLoading) {
    return (
      <Card>
        <CardContent className="p-6">
          <div className="space-y-2">
            <div className="h-4 w-[200px] animate-pulse rounded-lg bg-muted"></div>
            <div className="h-4 w-[300px] animate-pulse rounded-lg bg-muted"></div>
          </div>
        </CardContent>
      </Card>
    )
  }

  return (
    <>
      <Card>
        <CardContent className="p-0">
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>Foto</TableHead>
                <TableHead>Nombre</TableHead>
                <TableHead>Especie</TableHead>
                <TableHead>Estado</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {mascotas.map((mascota) => (
                <TableRow key={mascota.id}>
                  <TableCell>
                    <div className="h-12 w-12 rounded-lg overflow-hidden bg-secondary">
                      <img
                        src={mascota.foto_url || "/placeholder.svg"}
                        alt={mascota.nombre}
                        className="h-full w-full object-cover"
                        onError={(e) => {
                          console.error('Image load error for mascota:', mascota.nombre, 'URL:', mascota.foto_url)
                          e.currentTarget.src = "/placeholder.svg"
                        }}
                      />
                    </div>
                  </TableCell>
                  <TableCell className="font-medium">{mascota.nombre}</TableCell>
                  <TableCell>{mascota.especie}</TableCell>
                  <TableCell>{getEstadoBadge(mascota.estado)}</TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </CardContent>
      </Card>

      {successMessage && (
        <Alert className="mt-4">
          <AlertDescription>{successMessage}</AlertDescription>
        </Alert>
      )}
    </>
  )
}
